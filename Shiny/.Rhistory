avePlot
head(dgames2)
paste0(dgames2$team[1], ", ", dgames2$away[1])
head(dgames2$home.away)
avePlot <- nPlot(
med.price ~ ave.standing,
data = dgames2,
group = "home.away",
type = "scatterChart", showLegend=F)
# Add axis labels and format the tooltip
avePlot$yAxis(axisLabel = "Median ticket price ($)", width = 62, tickValues = "#! function (x) {
tickvalues = [0, 100, 200, 300,400,500];
return tickvalues;
} !#")
avePlot$xAxis(axisLabel = "Average Team Standing",
tickValues = "#! function (x) {
tickvalues = [0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30];
return tickvalues;
} !#")
avePlot$chart(color = cols, tooltipContent = "#! function(key, x, y){
return '<h3>' + key + '</h3>' +
'<p>' + 'Standing: '+ x + ' , ' + 'Price: $'+ y + '</p>'
} !#")
avePlot
avePlot$chart(showLegend=F, sizeRange = c(250,250), forceY = c(25, 375), forceX = c(0, 30))
avePlot
avePlot$chart(showLegend=F, forceY = c(25, 375), forceX = c(0, 30))
avePlot <- nPlot(
med.price ~ ave.standing,
data = dgames2,
group = "home.away",
type = "scatterChart", showLegend=F)
# Add axis labels and format the tooltip
avePlot$yAxis(axisLabel = "Median ticket price ($)", width = 62, tickValues = "#! function (x) {
tickvalues = [0, 100, 200, 300,400,500];
return tickvalues;
} !#")
avePlot$xAxis(axisLabel = "Average Team Standing",
tickValues = "#! function (x) {
tickvalues = [0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30];
return tickvalues;
} !#")
avePlot$chart(tooltipContent = "#! function(key, x, y){
return '<h3>' + key + '</h3>' +
'<p>' + 'Standing: '+ x + ' , ' + 'Price: $'+ y + '</p>'
} !#")
avePlot$chart(showLegend=F, forceY = c(25, 375), forceX = c(0, 30))
avePlot
avePlot$setTemplate(
afterScript = "<style>
.tick line {
opacity: 0;
}
</style>")
avePlot
avePlot$chart(col = 1, tooltipContent = "#! function(key, x, y){
return '<h3>' + key + '</h3>' +
'<p>' + 'Standing: '+ x + ' , ' + 'Price: $'+ y + '</p>'
} !#")
avePlot$chart(showLegend=F, forceY = c(0, 500), forceX = c(0, 30))
avePlot$setTemplate(
afterScript = "<style>
.tick line {
opacity: 0;
}
</style>")
#standPlot$set(width = 600, height = 600)
avePlot
avePlot$chart(color = 1, tooltipContent = "#! function(key, x, y){
return '<h3>' + key + '</h3>' +
'<p>' + 'Standing: '+ x + ' , ' + 'Price: $'+ y + '</p>'
} !#")
avePlot$chart(showLegend=F, forceY = c(0, 500), forceX = c(0, 30))
avePlot$setTemplate(
afterScript = "<style>
.tick line {
opacity: 0;
}
</style>")
#standPlot$set(width = 600, height = 600)
avePlot
avePlot$chart(color = rep(1,nrow(dgames2) ), tooltipContent = "#! function(key, x, y){
return '<h3>' + key + '</h3>' +
'<p>' + 'Standing: '+ x + ' , ' + 'Price: $'+ y + '</p>'
} !#")
avePlot$chart(showLegend=F, forceY = c(0, 500), forceX = c(0, 30))
avePlot$setTemplate(
afterScript = "<style>
.tick line {
opacity: 0;
}
</style>")
#standPlot$set(width = 600, height = 600)
avePlot
rep(1,nrow(dgames2)
)
avePlot$chart(color = rep("black",nrow(dgames2) ), tooltipContent = "#! function(key, x, y){
return '<h3>' + key + '</h3>' +
'<p>' + 'Standing: '+ x + ' , ' + 'Price: $'+ y + '</p>'
} !#")
avePlot$chart(showLegend=F, forceY = c(0, 500), forceX = c(0, 30))
avePlot$setTemplate(
afterScript = "<style>
.tick line {
opacity: 0;
}
</style>")
#standPlot$set(width = 600, height = 600)
avePlot
avePlot$chart(color = 1:500, tooltipContent = "#! function(key, x, y){
return '<h3>' + key + '</h3>' +
'<p>' + 'Standing: '+ x + ' , ' + 'Price: $'+ y + '</p>'
} !#")
avePlot$chart(showLegend=F, forceY = c(0, 500), forceX = c(0, 30))
avePlot$setTemplate(
afterScript = "<style>
.tick line {
opacity: 0;
}
</style>")
#standPlot$set(width = 600, height = 600)
avePlot
avePlot$chart(tooltipContent = "#! function(key, x, y){
return '<h3>' + key + '</h3>' +
'<p>' + 'Standing: '+ x + ' , ' + 'Price: $'+ y + '</p>'
} !#")
avePlot$chart(showLegend=F, forceY = c(0, 500), forceX = c(0, 30))
avePlot$setTemplate(
afterScript = "<style>
.tick line {
opacity: 0;
}
</style>")
#standPlot$set(width = 600, height = 600)
avePlot
avePlot <- nPlot(
med.price ~ ave.standing,
data = dgames2,
group = "home.away",
type = "scatterChart", showLegend=F)
# Add axis labels and format the tooltip
avePlot$yAxis(axisLabel = "Median ticket price ($)", width = 62, tickValues = "#! function (x) {
tickvalues = [0, 100, 200, 300,400,500];
return tickvalues;
} !#")
avePlot$xAxis(axisLabel = "Average Team Standing",
tickValues = "#! function (x) {
tickvalues = [0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30];
return tickvalues;
} !#")
avePlot$chart(tooltipContent = "#! function(key, x, y){
return '<h3>' + key + '</h3>' +
'<p>' + 'Standing: '+ x + ' , ' + 'Price: $'+ y + '</p>'
} !#")
avePlot$chart(showLegend=F, forceY = c(0, 500), forceX = c(0, 30))
avePlot$setTemplate(
afterScript = "<style>
.tick line {
opacity: 0;
}
</style>")
#standPlot$set(width = 600, height = 600)
avePLot
avePlot
avePlot <- nPlot(
med.price ~ ave.standing,
data = dgames2,
group = "home.away",
type = "scatterChart", showLegend=F)
# Add axis labels and format the tooltip
avePlot$yAxis(axisLabel = "Median ticket price ($)", width = 62, tickValues = "#! function (x) {
tickvalues = [0, 100, 200, 300,400,500];
return tickvalues;
} !#")
avePlot$xAxis(axisLabel = "Average Team Standing",
tickValues = "#! function (x) {
tickvalues = [0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30];
return tickvalues;
} !#")
avePlot$chart(color = rep(1, nrow(dgames2), tooltipContent = "#! function(key, x, y){
return '<h3>' + key + '</h3>' +
'<p>' + 'Standing: '+ x + ' , ' + 'Price: $'+ y + '</p>'
} !#")
avePlot$chart(showLegend=F, forceY = c(0, 500), forceX = c(0, 30))
avePlot$setTemplate(
afterScript = "<style>
.tick line {
opacity: 0;
}
</style>")
#standPlot$set(width = 600, height = 600)
avePlot
avePlot <- nPlot(
med.price ~ ave.standing,
data = dgames2,
group = "home.away",
type = "scatterChart", showLegend=F)
# Add axis labels and format the tooltip
avePlot$yAxis(axisLabel = "Median ticket price ($)", width = 62, tickValues = "#! function (x) {
tickvalues = [0, 100, 200, 300,400,500];
return tickvalues;
} !#")
avePlot$xAxis(axisLabel = "Average Team Standing",
tickValues = "#! function (x) {
tickvalues = [0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30];
return tickvalues;
} !#")
avePlot$chart(color = rep(1, nrow(dgames2)), tooltipContent = "#! function(key, x, y){
return '<h3>' + key + '</h3>' +
'<p>' + 'Standing: '+ x + ' , ' + 'Price: $'+ y + '</p>'
} !#")
avePlot$chart(showLegend=F, forceY = c(0, 500), forceX = c(0, 30))
avePlot$setTemplate(
afterScript = "<style>
.tick line {
opacity: 0;
}
</style>")
#standPlot$set(width = 600, height = 600)
avePlot
dgames2$home.away[1]
strsplit(dgames2$home.away[1], ",")
strsplit(dgames2$home.away[1], " , ")
strsplit(dgames2$home.away, " , ")=="Golden State Warriors"
strsplit(dgames2$home.away, " , ")[1]=="Golden State Warriors"
(strsplit(dgames2$home.away, " , ")[1])=="Golden State Warriors"
strsplit(dgames2$home.away, " , ")
unlist(strsplit(dgames2$home.away, " , "))
strsplit(dgames2$home.away, " , ")
sapply(1:nrow(dgames2), strsplit(dgames2$home.away[i], " , ")[1])
sapply(1:nrow(dgames2), function(i) strsplit(dgames2$home.away[i], " , ")[1])
i
strsplit(dgames2$home.away[i], " , ")[1]\
strsplit(dgames2$home.away[i], " , ")[1]
strsplit(dgames2$home.away[i], " , ")
strsplit(dgames2$home.away[1], " , ")
strsplit(dgames2$home.away[1], " , ")[[1]][1]
sapply(1:nrow(dgames2), function(i) strsplit(dgames2$home.away[i], " , ")[[1]][1])
sapply(1:nrow(dgames2), function(i) strsplit(dgames2$home.away[i], " , ")[[1]][1])== "Golden State Warriors"
sapply(1:nrow(dgames2), function(i) strsplit(dgames2$home.away[i], " , ")[[1]][1])|sapply(1:nrow(dgames2), function(i) strsplit(dgames2$home.away[i], " , ")[[1]][2
sapply(1:nrow(dgames2), function(i) strsplit(dgames2$home.away[i], " , ")[[1]][1])|sapply(1:nrow(dgames2), function(i) strsplit(dgames2$home.away[i], " , ")[[1]][2])== "Golden State Warriors"
(sapply(1:nrow(dgames2), function(i) strsplit(dgames2$home.away[i], " , ")[[1]][1])|sapply(1:nrow(dgames2), function(i) strsplit(dgames2$home.away[i], " , ")[[1]][2]))== "Golden State Warriors"
(sapply(1:nrow(dgames2), function(i) strsplit(dgames2$home.away[i], " , ")[[1]][1]))== "Golden State Warriors"
(sapply(1:nrow(dgames2), function(i) strsplit(dgames2$home.away[i], " , ")[[1]][1]))== "Golden State Warriors"
(sapply(1:nrow(dgames2), function(i) strsplit(dgames2$home.away[i], " , ")[[1]][2]))== "Golden State Warriors"
(sapply(1:nrow(dgames2), function(i) strsplit(dgames2$home.away[i], " , ")[[1]][1]))== "Golden State Warriors" |(sapply(1:nrow(dgames2), function(i) strsplit(dgames2$home.away[i], " , ")[[1]][2]))== "Golden State Warriors"
hasteam <- (sapply(1:nrow(dgames2), function(i) strsplit(dgames2$home.away[i], " , ")[[1]][1]))== "Golden State Warriors" |(sapply(1:nrow(dgames2), function(i) strsplit(dgames2$home.away[i], " , ")[[1]][2]))== "Golden State Warriors"
cols <- ifelse(hasteam==T, 2, 1)
cols
tm <- "Golden State Warriors"
hasteam <- (sapply(1:nrow(dgames2), function(i) strsplit(dgames2$home.away[i], " , ")[[1]][1]))== tm |(sapply(1:nrow(dgames2), function(i) strsplit(dgames2$home.away[i], " , ")[[1]][2]))== tm
hasteam
cols <- ifelse(hasteam==T, 2, 1)
avePlot <- nPlot(
med.price ~ ave.standing,
data = dgames2,
group = "home.away",
type = "scatterChart", showLegend=F)
# Add axis labels and format the tooltip
avePlot$yAxis(axisLabel = "Median ticket price ($)", width = 62, tickValues = "#! function (x) {
tickvalues = [0, 100, 200, 300,400,500];
return tickvalues;
} !#")
avePlot$xAxis(axisLabel = "Average Team Standing",
tickValues = "#! function (x) {
tickvalues = [0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30];
return tickvalues;
} !#")
avePlot$chart(color = cols, tooltipContent = "#! function(key, x, y){
return '<h3>' + key + '</h3>' +
'<p>' + 'Standing: '+ x + ' , ' + 'Price: $'+ y + '</p>'
} !#")
avePlot$chart(showLegend=F, forceY = c(0, 500), forceX = c(0, 30))
avePlot$setTemplate(
afterScript = "<style>
.tick line {
opacity: 0;
}
</style>")
#standPlot$set(width = 600, height = 600)
##
avePlot
cols
cols <- ifelse(hasteam==T, "red", "black")
avePlot <- nPlot(
med.price ~ ave.standing,
data = dgames2,
group = "home.away",
type = "scatterChart", showLegend=F)
# Add axis labels and format the tooltip
avePlot$yAxis(axisLabel = "Median ticket price ($)", width = 62, tickValues = "#! function (x) {
tickvalues = [0, 100, 200, 300,400,500];
return tickvalues;
} !#")
avePlot$xAxis(axisLabel = "Average Team Standing",
tickValues = "#! function (x) {
tickvalues = [0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30];
return tickvalues;
} !#")
avePlot$chart(color = cols, tooltipContent = "#! function(key, x, y){
return '<h3>' + key + '</h3>' +
'<p>' + 'Standing: '+ x + ' , ' + 'Price: $'+ y + '</p>'
} !#")
avePlot$chart(showLegend=F, forceY = c(0, 500), forceX = c(0, 30))
avePlot$setTemplate(
afterScript = "<style>
.tick line {
opacity: 0;
}
</style>")
#standPlot$set(width = 600, height = 600)
##
avePlot
setwd("~/Dropbox/Other/NBA/Shiny/")
library(Shiny)
library(rshiny)
library(shiny)
runApp(app1)
runApp('app1')
levels(dgames2$team)
levels(dgames2$team)
runApp('app1')
runApp('app1')
runApp('app1')
runApp('app1')
runApp('app1')
runApp('app1')
runApp('app1')
runApp('app1')
runApp('app1')
runApp('app1')
runApp('app1')
runApp('app1')
runApp('app1')
runApp('app1')
runApp('app1')
runApp('app1')
runApp('app1')
runApp('app1')
runApp('app1')
runApp('app1')
runApp('app1')
write.csv(dgames2, "app1/dgames2.csv", row.names=F)
shinyapps::deployApp('app1')
runApp('app1')
test <- read.csv("app1/dgames2.csv", header=T)
head(test)
is.factor(dgames2$team)
is.factor(dgames2$away)
is.factor(dgames2$home.away)
is.factor(dgames2$med.price)
is.factor(dgames2$ave.standing)
is.factor(test$ave.standing)
is.factor(test$away)
is.factor(test$home.away)
shinyapps::deployApp('app1')
head(dgames2)
dgames <- d %>% group_by(team, away, date) %>% summarise(med.price = median(price))
head(dgames)
as.data(dgames$date)
as.date(dgames$date)
as.Date(dgames$date)
Year(as.Date(dgames$date))
year(as.Date(dgames$date))
as.Date(dgames$date)[1]
month(as.Date(dgames$date)[1])
library(ggplot2)
x <- read.csv("~/Dropbox/CAGShare/Misc/visited.csv")
x$region <- tolower(x$state)
x$visited <- as.factor(x$visited)
x$Visited[x$visited==0]  <- "No"
x$Visited[x$visited==1]  <- "Yes"
states_map <- map_data("state")
plot.title = 'CAG USA Travel'
plot.subtitle = paste0("Total States: ", sum(x$visited == 1), " out of 50.")
g <- ggplot(x, aes(map_id = region)) +
geom_map(aes(fill = Visited, col = "white"), map = states_map, colour= "black") +
expand_limits(x = states_map$long, y = states_map$lat)+
scale_fill_manual(values = c("white", "tomato"))+
theme(panel.background = element_blank(), plot.background = element_rect(fill = "white"), panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),axis.title.x = element_blank(), axis.title.y = element_blank(),
plot.title = element_text(face="bold"))+
scale_x_continuous(breaks=NULL) + scale_y_continuous(breaks=NULL)+
ggtitle(bquote(atop(.(plot.title), atop(italic(.(plot.subtitle)), ""))))
g
as.Date(dgames$date, format='%m/%d/%Y')
format(as.Date(dgames$date)[1], '%m/%Y')
format(as.Date(dgames$date)[1], '%m/%d')
format(as.Date(dgames$date)[1], '%m/%d/%Y)
dgame$date
dgames$date
as.Data(dgames$date)
as.Date(dgames$date)
format(as.Date(dgames$date), '%m/%d/%Y')
dgames$home.away.date <- paste0(as.character(dgames$team),", ",as.character(dgames$away), " (", format(as.Date(dgames$date), '%m/%d/%Y'), ")")
dgames2 <- dgames[-which(dgames$med.price==max(dgames$med.price)),]
head(dgames2)
sapply(1:nrow(dgames2), function(i) strsplit(dgames2$home.away[i], ", ")
)
sapply(1:nrow(dgames2), function(i) strsplit(dgames2$home.away[i], " "))
sapply(1:nrow(dgames2), function(i) strsplit(dgames2$home.away[i], ", "))
sapply(1:nrow(dgames2), function(i) strsplit(dgames2$home.away[i], ", ")[[1]][2])
sapply(1:nrow(dgames2) function (i) strsplit(sapply(1:nrow(dgames2), function(i) strsplit(dgames2$home.away[i], ", ")[[1]][2]), "(")[[1]][1])
sapply(1:nrow(dgames2) function(i) strsplit(sapply(1:nrow(dgames2), function(i) strsplit(dgames2$home.away[i], ", ")[[1]][2]), "(")[[1]][1])
sapply(1:nrow(dgames2), function(i) strsplit(sapply(1:nrow(dgames2), function(i) strsplit(dgames2$home.away[i], ", ")[[1]][2]), "(")[[1]][1])
sapply(1:nrow(dgames2), function(i) strsplit(sapply(1:nrow(dgames2), function(i) strsplit(dgames2$home.away[i], ", ")[[1]][2]), "(")[[1]][1])
sapply(1:nrow(dgames2), function(i) strsplit(sapply(1:nrow(dgames2), function(i) strsplit(dgames2$home.away[i], ", ")[[1]][2]), " ")[[1]][1])
(sapply(1:nrow(dgames2), function(i) strsplit(dgames2$home.away[i], " , ")[[1]][2]))
(sapply(1:nrow(dgames2), function(i) strsplit(dgames2$home.away[i], ", ")[[1]][2]))
tmp <- (sapply(1:nrow(dgames2), function(i) strsplit(dgames2$home.away[i], ", ")[[1]][2]))a
tmp <- (sapply(1:nrow(dgames2), function(i) strsplit(dgames2$home.away[i], ", ")[[1]][2]))
strsplit(tmp, " ")
strsplit(tmp, "(")
gsub("\\(.*","",tmp)
gsub("\\ (.*","",tmp)
gsub("\\ \\(.*","",tmp)
runApp('app1')
runApp('app1')
(sapply(1:nrow(dgames2), function(i) strsplit(dgames2$home.away[i], ", ")[[1]][2]))
tmp <- (sapply(1:nrow(dgames2), function(i) strsplit(dgames2$home.away[i], ", ")[[1]][2]))
gsub("\\ \\(.*","",tmp)
runApp('app1')
head(dgames2)
dgames$away[dgames$away=="Portland Trailblazers"] <- "Portland Trail Blazers"
for(i in 1:nrow(dgames)){
dgames$home.standing[i] <- which(as.character(dgames$team[i])==stand.team)
dgames$away.standing[i] <- which(as.character(dgames$away[i])==stand.team)
}
dgames$ave.standing <- (dgames$away.standing+ dgames$home.standing)/2
dgames$home.gt.away <- 0
dgames$home.gt.away[dgames$home.standing>dgames$away.standing] <- 1
dgames$home.away.date <- paste0(as.character(dgames$team),", ",as.character(dgames$away), " (", format(as.Date(dgames$date), '%m/%d/%Y'), ")")
dgames2 <- dgames[-which(dgames$med.price==max(dgames$med.price)),]
write.csv(dgames2, file = 'app1/dgames2.csv', row.names=F)
runApp('app1')
runApp('app1')
runApp('app1')
runApp('app1')
runApp('app1')
max(dgames2$med.price)
max(dgames2$med.price)
runApp('app1')
runApp('app1')
runApp('app1')
runApp('app1')
runApp('app1')
runApp('app1')
head(dgames2)
sapply(1:nrow(dgames2), function(i) strsplit(dgames2$home.away.date[i], ", ")[[1]][1])
sapply(1:nrow(dgames2), function(i) strsplit(dgames2$home.away[i], " , ")[[1]][2])
sapply(1:nrow(dgames2), function(i) strsplit(dgames2$home.away.date[i], " , ")[[1]][2])
sapply(1:nrow(dgames2), function(i) strsplit(dgames2$home.away.date[i], " , ")[[1]][2])
strsplit(dgames2$home.away.date[i], " , ")
runApp("app1")
runApp("app1")
runApp("app1")
runApp("app1")
title: "test"
?system.file
?file
?shinyAppDir
shinyAppDir("~/Dropbox/Other/NBA/Shiny/app1")
dsum.hoe
dsum.home
write.csv(dsum.home, file = "~/Dropbox/Other/NBA/dsum.home.csv", row.names=F)
standPlot
cras
cars
standPlot <- nPlot(
med.price ~ standing,
data = dsum.home,
group = "team",
type = "scatterChart", showLegend=F)
# Add axis labels and format the tooltip
standPlot$yAxis(axisLabel = "Ticket price, home games ($)", width = 62, tickValues = "#! function (x) {
tickvalues = [25, 75, 125, 175, 225, 275, 325, 375];
return tickvalues;
} !#")
standPlot$xAxis(axisLabel = "Current Team Standing",
tickValues = "#! function (x) {
tickvalues = [0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30];
return tickvalues;
} !#")
standPlot$chart(color = cols, tooltipContent = "#! function(key, x, y){
return '<h3>' + key + '</h3>' +
'<p>' + 'Standing: '+ x + ' , ' + 'Price: $'+ y + '</p>'
} !#")
standPlot$chart(showLegend=F, sizeRange = c(250,250), forceY = c(25, 375), forceX = c(0, 30))
standPlot$setTemplate(
afterScript = "<style>
.tick line {
opacity: 0;
}
</style>")
standPlot
cols <- c("#006BB6", "#552582", "#000000", "#007DC3", "#F58426", "#860038", "#006BB6",
"#F9A01B", "#CE1141", "#C4CED3", "#00A94F", "#CE1141", "#4FA8FF", "#724C9F",
"#CE1142", "#E03A3E", "#F0163A", "#000000", "#23375B", "#008348", "#20385B",
"#1D1160", "#E56020", "#FFC633", "#002566", "#00471B", "#002B5C", "#B4975A", "#006BB6", "#001F70" )
m2
m2 <- nPlot(speed ~ dist, data = cars, type = "scatterChart")
m2
m2$print
standPlot
standPlot$save('mychart1.html', standalone = TRUE)
nrow(d)
max(dgames)
max(dgames$med.price)
dgames[215,]
which(dgames$med.price==max(dgames$med.price))
dgames[480,]
quit()
